typedef struct NoB {
    int n;                 
    int keys[2 * T - 1];    
    struct NoB* filhos[2 * T]; 
    int folha;              
} NoB;

NoB* novoNoB(int folha) {
    NoB* no = (NoB*)malloc(sizeof(NoB));
    no->n = 0;
    no->folha = folha;
    for (int i = 0; i < 2 * T; i++) {
        no->filhos[i] = NULL;
    }
    return no;
}

void inserirNoB(NoB** raiz, int k) {
    NoB* r = *raiz;
    if (r->n == 2 * T - 1) {
        NoB* s = novoNoB(0);
        *raiz = s;
        s->filhos[0] = r;
        dividirFilho(s, 0);
        inserirNonFull(s, k);
    } else {
        inserirNonFull(r, k);
    }
}

void dividirFilho(NoB* x, int i) {
    NoB* y = x->filhos[i];
    NoB* z = novoNoB(y->folha);
    z->n = T - 1;

    for (int j = 0; j < T - 1; j++)
        z->keys[j] = y->keys[j + T];

    if (!y->folha) {
        for (int j = 0; j < T; j++)
            z->filhos[j] = y->filhos[j + T];
    }

    y->n = T - 1;

    for (int j = x->n; j >= i + 1; j--)
        x->filhos[j + 1] = x->filhos[j];

    x->filhos[i + 1] = z;

    for (int j = x->n - 1; j >= i; j--)
        x->keys[j + 1] = x->keys[j];

    x->keys[i] = y->keys[T - 1];
    x->n++;
}

void inserirNonFull(NoB* x, int k) {
    int i = x->n - 1;

    if (x->folha) {
        while (i >= 0 && k < x->keys[i]) {
            x->keys[i + 1] = x->keys[i];
            i--;
        }
        x->keys[i + 1] = k;
        x->n++;
    } else {
        while (i >= 0 && k < x->keys[i])
            i--;
        i++;

        if (x->filhos[i]->n == 2 * T - 1) {
            dividirFilho(x, i);
            if (k > x->keys[i])
                i++;
        }
        inserirNonFull(x->filhos[i], k);
    }
}

void emOrdem(NoB* raiz) {
    if (raiz != NULL) {
        for (int i = 0; i < raiz->n; i++) {
            if (!raiz->folha)
                emOrdem(raiz->filhos[i]);
            printf("%d ", raiz->keys[i]);
        }
        if (!raiz->folha)
            emOrdem(raiz->filhos[raiz->n]);
    }
}

int main() {
    NoB* raiz = novoNoB(1);
    int n, valor;
    printf("Quantos números você deseja inserir na árvore B? ");
    scanf("%d", &n);

    printf("Digite os %d números:\n", n);
    for (int i = 0; i < n; i++) {
        scanf("%d", &valor);
        inserirNoB(&raiz, valor);
    }

    printf("Em-Ordem:");
    emOrdem(raiz);
    printf("\n");
    return 0;
}
